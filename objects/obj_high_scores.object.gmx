<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init member variables, send data request and set drawing variables

loaded = false
receive_input = false

draw_set_color(c_white)
state = "enter_name"
scr_call_input(room_width / 2, y, id, 20)
//http_get("http://thing789.pythonanywhere.com/?user=thing789&amp;score=2&amp;new_user=1")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(receive_input){
    state = "http_request_pending"
    receive_input = false
    http_get("http://thing789.pythonanywhere.com/?user=" + global.current_input + "&amp;score=" + string(global.player_score) + "&amp;new_user=0")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(async_load[? "id"] != 0 || async_load[? "http_status"] != 200){
    state = "error"
}
else{
    data = json_decode(async_load[? "result"])
    state = "http_finished"
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the content

switch(state){
case "enter_name":
    draw_set_font(font_large)
    draw_set_halign(fa_center)
    draw_text(room_width / 2 - 150, y, "Enter your username:")
    break;
case "http_request_pending":
    draw_set_font(font_large)
    draw_set_halign(fa_center)
    draw_text(room_width / 2, y, "Loading data ...")
    break
case "error":
    draw_set_font(font_large)
    draw_set_halign(fa_center)
    draw_text(room_width / 2, y, "Error in fetching the results :(")
    break
case "http_finished":
    draw_set_font(font_small)
    draw_set_halign(fa_left)    
    
    row2_offset = 150
    row_width = 20
    
    if(!ds_map_exists(data, "top_10")){
        state = "error"
        exit;
    }
    top_10 = data[? "top_10"]
    
    draw_text(x, y, "Username")
    draw_text(x + row2_offset, y, "Score")
    for(var i = 0;i &lt; ds_list_size(top_10);i++){
        curr_el = top_10[| i]
        draw_text(x, y + (i + 1)  * row_width, curr_el[| 0])
        draw_text(x + row2_offset, y + (i + 1) * row_width, curr_el[| 1])
    }
    
    draw_set_font(font_large)
    draw_text(x + 400, y, "You are " + string(data[? "your_rank"]) + get_suffix(data[? "your_rank"]) + "!")
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
