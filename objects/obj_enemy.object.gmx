<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Choose random shape
randomize();

switch(irandom_range(0, 1)) {
    case 0: shape = instance_create(x, y, obj_enemy_triangle);
            attack_type = "shooter";
            break;
    case 1: shape = instance_create(x, y, obj_enemy_square);
            attack_type = "melee";
            break;
}

with(shape) init_shape();

vspeed = 5;
shape.vspeed = 5;

alarm[1] = 30;  // start shooting

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Use attack, reset alarm

switch(attack_type) {
    case "shooter": with(shape) shoot_bullets(false);
                    break;
    case "melee": create_pulse(shape, true);
                  break;
}

alarm[1] = 30;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Do collision detection with bullets

with(shape){
    collided_bullet = instance_place(x, y, obj_bullet);
    if(collided_bullet != noone) {
        if(not instance_place(x, y, obj_bullet).from_enemy) {
            has_collided = true;
            audio_play_sound(snd_damage3, 2, false);
            
            global.player_score += 1;    
            
            // Attach to main object
            if((other.shape.object_index == obj_enemy_triangle) and (global.player_score % 5 == 0) and (global.player_score &gt; 0))
                with(global.player) add_shape(obj_triangle)
            if((other.shape.object_index == obj_enemy_square) and (global.player_score % 5 == 0) and (global.player_score &gt; 0))
                with(global.player) add_shape(obj_square)
                
            image_speed = 1;
            instance_create(collided_bullet.x, collided_bullet.y, obj_green_particle)
            instance_create(collided_bullet.x, collided_bullet.y, obj_white_particle)
            with(collided_bullet) instance_destroy();
            with(other) instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Do collision detection with pulse


with(shape){
    collided_pulse = instance_place(x, y, obj_pulse);
    if(collided_pulse != noone) {
        if(not collided_pulse.from_enemy) {
            has_collided = true;
            audio_play_sound(snd_damage3, 2, false);
                
            global.player_score += 1;
            
            // Attach to main object
            if((other.shape.object_index == obj_enemy_triangle) and (global.player_score % 5 == 0) and (global.player_score &gt; 0))
                with(global.player) add_shape(obj_triangle)
            if((other.shape.object_index == obj_enemy_square) and (global.player_score % 5 == 0) and (global.player_score &gt; 0))
                with(global.player) add_shape(obj_square)
                
            image_speed = 1;
            with(collided_pulse) instance_destroy();
            with(other) instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update shape

with(shape) update_shape();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make sure enemy dies after leaving screen

if(y &gt; room_height) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
